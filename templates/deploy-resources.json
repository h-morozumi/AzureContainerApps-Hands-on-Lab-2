{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetwork": {
            "type": "string",
            "defaultValue": "vnet-1",
            "metadata": {
                "description": "仮想ネットワーク名"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.1.0.0/16",
            "metadata": {
                "description": "IPv4 アドレス空間"
            }
        },
        "subnet1": {
            "type": "string",
            "defaultValue": "Subnet-1",
            "metadata": {
                "description": "サブネット名 (1)"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.1.1.0/24",
            "metadata": {
                "description": "サブネット アドレス範囲 (1)"
            }
        },
        "networkSecurityGroup-1": {
            "type": "string",
            "defaultValue": "nsg-vnet-1-Subnet-1",
            "metadata": {
                "description": "Network Security Group 名 (Subnet-1)"
            }
        },
        "networkSecurityGroup-ContainerApps": {
            "type": "string",
            "defaultValue": "nsg-vnet-1-Subnet-ContainerApps",
            "metadata": {
                "description": "Network Security Group 名 (ContainerApps)"
            }
        },
        "logAnalyticsWorkspace": {
            "type": "string",
            "defaultValue": "log-1",
            "metadata": {
                "description": "Log Analytics Workspace"
            }
        },
        "applicationInsightsName": {
            "type": "string",
            "defaultValue": "appi-workshop-q4",
            "metadata": {
                "description": "Application Insights"
            }
        },
        "registryName": {
            "type": "string",
            "metadata": {
                "description": "Azure Container Registry"
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Key Vault"
            }
        },
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "SQL Server 名"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "sqladmin",
            "metadata": {
                "description": "SQL サーバー管理者"
            }
        },
        "sqlAdministratorPassword": {
            "type": "securestring",
            "metadata": {
                "description": "パスワード"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "ストレージ アカウント名"
            }
        },
        "serviceBusNamespace": {
            "type": "string",
            "metadata": {
                "description": "Service Bus 名前空間"
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkSecurityGroup-1')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-09-01",
            "name": "[parameters('networkSecurityGroup-ContainerApps')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-HTTP-Inbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroup-1'), 'Allow-HTTP-Inbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-HTTPS-Inbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroup-ContainerApps'), 'Allow-HTTPS-Inbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroup-ContainerApps'), '/Allow-HTTP-Inbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup-ContainerApps'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('networkSecurityGroup-ContainerApps'), '/Allow-HTTPS-Inbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup-ContainerApps'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[parameters('virtualNetwork')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                }
            },
            "resources":[
                {
                    "type": "subnets",
                    "apiVersion": "2022-09-01",
                    "name": "[parameters('subnet1')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup-1'))]",
                        "[parameters('virtualNetwork')]"
                    ],
                    "properties": {
                        "addressPrefix": "[parameters('subnet1Prefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup-1'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('logAnalyticsWorkspace')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspace'))]"
            ],
            "properties": {
                "ApplicationId": "[parameters('applicationInsightsName')]",
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspace'))]"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2022-12-01",
            "name": "[parameters('registryName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "zoneRedundancy": "Disabled",
                "publicNetworkAccess": "Enabled"            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-11-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2022-08-01-preview",
            "name": "[parameters('sqlServerName')]",
            "location": "[variables('location')]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
                "minimalTlsVersion": "1.2"
            },
            "resources": [
                {
                    "type": "databases",
                    "apiVersion": "2022-08-01-preview",
                    "name": "AdventureWorksLT",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
                    ],
                    "sku": {
                        "tier": "GeneralPurpose",
                        "name": "GP_S_Gen5_1"
                    },
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": 1073741824,
                        "sampleName": "AdventureWorksLT",
                        "autoPauseDelay": 60,
                        "zoneRedundant": false,
                        "readScale": "Disabled",
                        "highAvailabilityReplicaCount": 0,
                        "minCapacity": 0.5,
                        "requestedBackupStorageRedundancy": "Local",
                        "isLedgerOn": false
                    }
                },
                {
                    "type": "firewallRules",
                    "apiVersion": "2022-08-01-preview",
                    "name": "AllowAzureIps",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": false
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/', 'orders')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[parameters('serviceBusNamespace')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "zoneRedundant": false
            }
        }
    ],
    "outputs": {}
}